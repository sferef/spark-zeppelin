<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="issues">
    <option name="index">
      <map>
        <entry key="$PROJECT_DIR$/../quantexa-interview/README.md">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../quantexa-interview/build.sbt">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../quantexa-interview/project/Dependencies.scala">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../quantexa-interview/src/main/scala/Transactions/Example.scala">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../quantexa-interview/src/main/scala/Transactions/FoldableSolution.scala">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../quantexa-interview/src/main/scala/Transactions/InitialSolution.scala">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../quantexa-interview/src/main/scala/Transactions/Solution.scala">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../quantexa-interview/src/main/scala/Transactions/TestinMonoids.scala">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../quantexa-interview/src/main/scala/Transactions/transactions.txt">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../quantexa-interview/src/test/scala/Transactions/Helper.scala">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../quantexa-interview/src/test/scala/Transactions/SolutionSuite.scala">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../rockjvm-spark/spark-essentials/spark-cluster/docker-compose.yml">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../rockjvm-spark/spark-essentials/spark-cluster/docker/spark-master/Dockerfile">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../rockjvm-spark/spark-essentials/spark-cluster/docker/spark-submit/spark-submit.sh">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../rockjvm-spark/spark-essentials/spark-cluster/env/spark-worker.sh">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/.gitignore">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/README.md">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/build_images.sh">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/clean.sh">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/deploy.yml">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/docker-compose.yml">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/infrastructure/base/Dockerfile">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/infrastructure/build_images.sh">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/infrastructure/clean.sh">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/infrastructure/docker-compose.yml">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/infrastructure/docker/base/Dockerfile">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/infrastructure/docker/master/Dockerfile">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/infrastructure/docker/master/master.sh">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/infrastructure/docker/worker/Dockerfile">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/infrastructure/docker/worker/worker.sh">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/infrastructure/docker/zeppelin/Dockerfile">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/infrastructure/docker/zeppelin/local-repo/helium-registry-cache/a6618b3e-540a-340e-b624-07bf7f2b5e7d">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/infrastructure/single-mode-zeppelin.yml">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/pom.xml">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/queries/Queries.md">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/queries/transactions.txt">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/spark-zeppelin.iml">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/scala/com/spikes/demo/Demo.scala">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/scala/com/spikes/demo/InitialSolution.scala">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$USER_HOME$/Downloads/bde-tech-test-master/src/test/scala/example/TherapyOverlapsTest.scala">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$APPLICATION_CONFIG_DIR$/scratches/scratch.java">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$APPLICATION_CONFIG_DIR$/scratches/scratch_7.sc">
          <value>
            <set />
          </value>
        </entry>
        <entry key="/sbtShell">
          <value>
            <set />
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>